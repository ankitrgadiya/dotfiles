#!/usr/bin/env fish

# Copyright 2021, Ankit R Gadiya
# BSD License

# arg is a command-line utility inspired by tpope's dotfiles.

function usage
	echo "Usage: arg <command> [<args>]"
	echo "Supported commands:"
	echo -e "\tgit         - configure git profile"
	echo -e "\tnvim,vim,vi - neovim session"
	echo -e "\tshrt        - url shortener"
end

# shrt is a command for my Go link URL shortener.
# No args: it will list all the existing Go links.
# 1 arg  : it will create a Go link with auto-incrementing ID.
# 2 arg  : it will create a named Go link with the provided alias
function shrt -a url path
	set -l token (command cloudflared access token -app=https://argv.in/api)
	if test (count $argv) -eq 0
		http GET https://argv.in/api/urls/ "cf-access-token:$token" |
			jq -r ".routes[] | [.name, .url] | @sh" |
			awk -v FS="'" 'BEGIN{printf("%30s | %-120s\n", "PATH", "URL");printf("%30s | %-120s\n", "====", "===")};{printf("%30s | %-120s\n",$2, substr($4, 1, 120))}'
		return
	end
	set -l output (command http POST "https://argv.in/api/url/$path" "cf-access-token:$token" "url=$url")
	if test (command echo $output | jq -r .ok) = "true"
		set -l route (command echo $output | jq -r .route.name)
		echo "https://argv.in/$route"
	end
end

# gitconfig sets the User config for the current Git repository.
function gitconfig -a profile
	git status > /dev/null 2>&1
	if test $status -ne 0
		echo "not a git repository"
		return
	end

	switch $profile
	case "home" "personal"
		git config user.email "git@argp.in"
		git config user.signkey "3A25137FB8A87C77C5EAC226322DB2D680BAFB16"
	case "work" "rapyuta"
		git config user.email "ankit.gadiya@rapyuta-robotics.com"
		git config user.signkey "8C56990BFCA0F5209FF5A3026572A8682F35C253"
	case "*"
		echo "profile not present"
	end
end

# nvim-open is an proxy for opening neovim. It checks if the session file
# (managed by vim-obsession plugin) exists in the current directory.
function nvim-open
	if test (count $argv) -gt 0
		nvim $argv
	else
		if test -e Session.vim
			nvim -S
		else
			nvim
		end
	end
end


if test (count $argv) -eq 0
	usage
else
	switch $argv[1]
	case "vi*" "nvi*"
		nvim-open $argv[2..]
	case "git"
		gitconfig $argv[2..]
	case "shrt"
		shrt $argv[2..]
	case "*"
		usage
	end
end

# vi: ft=fish
