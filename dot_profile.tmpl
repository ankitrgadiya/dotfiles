# -*- mode: sh; -*-
# Begin ~/.profile

# Copyright 2019-2020, Ankit R Gadiya
# BSD License

{{- if eq .chezmoi.os "darwin" }}
# I use homebrew for package management on MacOS machines. The following adds
# the environment variables required for Brew.
eval $(/opt/homebrew shellenv)
{{- end }}

{{- if eq .chezmoi.os "darwin" }}
# The pre-installed coreutils in Mac are BSD version. Brew installs the GNU
# versions but prepends "g" in front of them. The symlinks exists for directly
# using the commands. The following adds the symlinks before PATH so it takes
# precedence before PATH variables.
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/findutils/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
{{- end }}

# Golang configuration
{{- if eq .machine "work" }}
export GOROOT="/usr/local/lib/go-1.11"
{{- else if eq .chezmoi.os "darwin" }}
export GOROOT="$HOMEBREW_PREFIX/opt/golang/libexec"
{{- else if eq .distro "fedora" }}
export GOROOT="/usr/lib/golang"
{{- else if eq .distro "ubuntu" }}
export GOROOT="/usr/lib/go-1.13"
{{- else if eq .distro "arch" }}
export GOROOT="/usr/lib/go"
{{- end }}
export GOPATH="$HOME/.local/go"
export GO111MODULE="auto"
{{- if eq .machine "work" }}
export GOPROXY="direct"
{{- else }}
export GOPROXY="https://proxy.golang.org,direct"
{{- end }}
export PATH="$GOPATH/bin:$GOROOT/bin:$PATH"

# Prepend ".local" directory in PATH and MANPATH
export PATH="$HOME/.local/bin:$PATH"
export MANPATH="$HOME/.local/share/man:$MANPATH"

# I use Emacs for editing text files. Emacs can also be configured to work in
# Client-Server fashion which means reduced time for launching client. Emacs 26
# (atleast on Debian) also comes with a user service (systemd) to run Emacs
# daemon automatically. However, if the daemon is not running the desirable
# result is to start a daemon and connect to it as client. I had some trouble in
# past where some command was not accepting flags in the $EDITOR variable and so
# the client was not working. So, I wrapped up the logic described in a simple
# shell script. I am using it as EDITOR now.
export EDITOR="emacs-editor"
export VISUAL="emacs-visual"

# End ~/.profile
